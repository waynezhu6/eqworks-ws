{"version":3,"sources":["styles/pages/Map.module.scss","styles/pages/Visualizations.module.scss","styles/App.module.scss","styles/components/Table.module.scss","styles/components/Chart.module.scss","../node_modules/colorbrewer sync","components/Navbar.jsx","components/Table.jsx","lib/utils.js","pages/DataTable.jsx","components/MapOverlay.jsx","lib/map.js","pages/Map.jsx","lib/api.js","components/Chart.jsx","pages/Visualizations.jsx","App.js","reportWebVitals.js","index.js","styles/components/Navbar.module.scss","styles/components/MapOverlay.module.scss","styles/pages/DataTable.module.scss"],"names":["module","exports","webpackEmptyContext","req","e","Error","code","keys","resolve","id","Navbar","history","useHistory","useState","selected","setSelected","className","styles","body","title","subtitle","sLabel","label","onClick","push","globalFilter","rows","filterValue","trim","length","terms","split","reduceRight","results","term","matchSorter","map","v","autoRemove","val","Table","config","data","visible","columns","useMemo","useTable","useGlobalFilter","useSortBy","getTableProps","getTableBodyProps","headerGroups","prepareRow","state","preGlobalFilteredRows","setGlobalFilter","style","display","table","slice","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","GlobalFilter","count","value","setValue","onChange","useAsyncDebounce","undefined","search","target","placeholder","memo","generateEvents","poi","num_poi","events","events_hourly","min","max","i","Math","floor","random","formatDates","date","all_events","reverse","generateStats","stats","stats_hourly","revenue","parseInt","toFixed","generatePoints","markers","p","type","poi_id","name","properties","cluster","geometry","coordinates","lon","lat","mergeDateHour","d","Date","setHours","getHours","hour","toISOString","formatHour","year","toLocaleString","month","day","weekday","suffix","sort","a","b","events_daily","stats_daily","CONFIG","Header","accessor","field","DataTable","navbar","index","MapOverlay","from","to","setDates","numEvents","recent","moment","format","filter","picker","maxDate","minDate","getEventsInRange","mapboxgl","workerClass","require","default","Map","useRef","width","height","longitude","latitude","zoom","viewport","setViewport","useEffect","updateSize","window","addEventListener","removeEventListener","setFrom","setTo","setResults","bounds","current","getMap","getBounds","toArray","flat","useSupercluster","points","options","radius","maxZoom","clusters","supercluster","isFrom","minZoom","onViewportChange","nextViewport","mapboxApiAccessToken","ref","getClusterExpansionZoom","transitionInterpolator","FlyToInterpolator","speed","curve","transitionDuration","point_count","marker","getAllApiData","getDailyEvents","getHourlyEvents","getDailyStats","getHourlyStats","getPOI","getEndpoint","endpoint","fetch","then","res","json","Chart","dataZoomedOut","dataZoomedIn","getSeries","timeFormat","TimeSeries","Index","getIndexString","toString","highlight","setHighlight","zoomed","setZoomed","series","setSeries","range","timeRange","setTimeRange","styler","key","color","infoValues","event","get","utc","timeAxisTickCount","enablePanZoom","onTimeRangeChanged","t","duration","minTime","maxTime","axis","highlighted","onHighlightChange","h","info","infoTimeFormat","begin","Visualizations","hint","charts","App","setData","console","log","getData","path","size","css","margin","transform","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.381e5330.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Map_body__2ifLF\",\"marker\":\"Map_marker__1Krpr\",\"cluster\":\"Map_cluster__2DgZL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Visualizations_body__2wmhJ\",\"hint\":\"Visualizations_hint__3vazc\",\"charts\":\"Visualizations_charts__3mb-6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"App_body__3yTwm\",\"placeholder\":\"App_placeholder__1KUkz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__1Ru1n\",\"search\":\"Table_search__TAHGI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Chart_body__2Ozn0\"};","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 236;","import React, { useState } from 'react';\r\nimport styles from '../styles/components/Navbar.module.scss';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n\r\n  let history = useHistory();\r\n  let [selected, setSelected] = useState(0);\r\n\r\n  return (\r\n    <div className={styles.body}>\r\n      <div className={styles.title}>EQ Works - Work Sample</div>\r\n      <div className={styles.subtitle}>Product Developer 2a - Frontend Track</div>\r\n\r\n      <div \r\n        className={selected == 0 ? styles.sLabel : styles.label} \r\n        onClick={() => {\r\n          setSelected(0);\r\n          history.push(\"/visualizations\");\r\n        }}\r\n      >\r\n        Visualizations\r\n      </div>\r\n\r\n      <div \r\n        className={selected == 1 ? styles.sLabel : styles.label} \r\n        onClick={() => {\r\n          setSelected(1);\r\n          history.push(\"/datatable\");\r\n        }}\r\n      >\r\n        Data Table\r\n      </div>\r\n\r\n      <div \r\n        className={selected == 2 ? styles.sLabel : styles.label} \r\n        onClick={() => {\r\n          setSelected(2);\r\n          history.push(\"/map\");\r\n        }}\r\n      >\r\n        Map\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;","import React, { useState, useMemo, memo } from \"react\";\r\nimport { useTable, useSortBy, useGlobalFilter, useAsyncDebounce } from \"react-table\";\r\nimport { matchSorter } from 'match-sorter';\r\nimport styles from '../styles/components/Table.module.scss';\r\n\r\nconst globalFilter = (rows, id, filterValue) => {\r\n  filterValue = filterValue.trim();\r\n  if (!filterValue || !filterValue.length)\r\n    return rows;\r\n\r\n  const terms = filterValue.split(' ');\r\n  if(!terms)\r\n    return rows;\r\n\r\n  return terms.reduceRight((results, term) => \r\n    matchSorter(results, term, {keys: id.map(v => 'values.' + v)}), \r\n    rows\r\n  );\r\n}\r\n\r\nglobalFilter.autoRemove = val => !val;\r\n\r\nconst Table = ({config, data, visible}) => {\r\n\r\n  const columns = useMemo(() => config, []);\r\n\r\n  const {\r\n    getTableProps, // table props from react-table\r\n    getTableBodyProps, // table body props from react-table\r\n    headerGroups, // headerGroups, if your table has groupings\r\n    rows, // rows for the table based on the data passed\r\n    prepareRow, // Prepare the row (this function needs to be called for each row before getting the row props)\r\n    state,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter\r\n  } = useTable({columns, data, globalFilter}, useGlobalFilter, useSortBy);\r\n\r\n  return (\r\n    <div style={!visible ? {display: \"none\"} : {}}>\r\n\r\n      <GlobalFilter\r\n        preGlobalFilteredRows={preGlobalFilteredRows}\r\n        globalFilter={state.globalFilter}\r\n        setGlobalFilter={setGlobalFilter}\r\n      />\r\n\r\n      <table {...getTableProps()} className={styles.table}>\r\n        <thead>\r\n          {headerGroups.slice(1).map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                  {column.render(\"Header\")}\r\n                    {column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? ' ⮝'\r\n                        : ' ⮟'\r\n                      : ' ⮞'}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map(cell => {\r\n                  return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nconst GlobalFilter = ({ preGlobalFilteredRows, globalFilter, setGlobalFilter }) => {\r\n  const count = preGlobalFilteredRows.length\r\n  const [value, setValue] = useState(globalFilter)\r\n  const onChange = useAsyncDebounce(value => {\r\n    setGlobalFilter(value || undefined)\r\n  }, 200)\r\n\r\n  return (\r\n    <div className={styles.search}>\r\n      <input\r\n        value={value || \"\"}\r\n        onChange={e => {\r\n          setValue(e.target.value);\r\n          onChange(e.target.value);\r\n        }}\r\n        placeholder={`Search ${count} rows (Hint: chain searches by space-seperating i.e. 2017 11AM)`}\r\n        \r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(Table);","// utils to shape API data\r\n\r\nfunction generateEvents(data){\r\n  // generates mock individual event data\r\n  if(!data)\r\n    return [];\r\n\r\n  let poi = data.poi;\r\n  let num_poi = data.poi.length;\r\n\r\n  let events_hourly = data.events_hourly;\r\n  let events = events_hourly.map((v) => {\r\n    let i = rand(0, num_poi);\r\n    return { \r\n      ...v, \r\n      ...poi[i],\r\n      ...formatDates(v.date)\r\n    };\r\n  });\r\n  data.all_events = events.reverse();\r\n}\r\n\r\nfunction generateStats(data){\r\n  // formats stats data\r\n  if(!data)\r\n    return [];\r\n\r\n  let stats_hourly = data.stats_hourly;\r\n  let stats = stats_hourly.map((v) => {\r\n    return { \r\n      ...v, \r\n      ...formatDates(v.date),\r\n      revenue: parseInt(v.revenue).toFixed(2)\r\n    };\r\n  });\r\n  data.stats_hourly = stats.reverse();\r\n}\r\n\r\nfunction generatePoints(data){\r\n  // generates point GeoJSON-compliant point data\r\n  let markers = data.poi.map((p) => ({\r\n    type: \"Feature\",\r\n    id: p.poi_id,\r\n    name: p.name,\r\n    properties: {\r\n      cluster: false,\r\n    },\r\n    geometry: { type: \"Point\", coordinates: [p.lon, p.lat] }\r\n  }));\r\n  data.markers = markers;\r\n}\r\n\r\nfunction mergeDateHour(data){\r\n  // sets date attribute to correct hour\r\n  data.events_hourly.map((v) => {\r\n    let d = new Date(v.date);\r\n    d.setHours(d.getHours() + v.hour)\r\n    v.date = d.toISOString();\r\n    v.hour = formatHour(v.hour);\r\n  });\r\n\r\n  data.stats_hourly.map((v) => {\r\n    let d = new Date(v.date);\r\n    d.setHours(d.getHours() + v.hour)\r\n    v.date = d.toISOString();\r\n    v.hour = formatHour(v.hour);\r\n  });\r\n\r\n  data.all_events.map((v) => {\r\n    let d = new Date(v.date);\r\n    d.setHours(d.getHours() + v.hour)\r\n    v.date = d.toISOString();\r\n    v.hour = formatHour(v.hour);\r\n  });\r\n}\r\n\r\nfunction formatDates(date){\r\n  let d = new Date(date);\r\n  return {\r\n    year: d.toLocaleString(\"en-US\", { year: 'numeric' }),\r\n    month: d.toLocaleString(\"en-US\", { month: 'long' }),\r\n    day: d.toLocaleString(\"en-US\", { day: 'numeric' }),\r\n    weekday: d.toLocaleString(\"en-US\", { weekday: 'long' })\r\n  }\r\n}\r\n\r\nfunction formatHour(hour){\r\n  let suffix = hour < 12 ? \"PM\" : \"AM\";\r\n  let time = (hour % 12) || 12;\r\n  return `${time}${suffix}`;\r\n}\r\n\r\nfunction rand(min, max){\r\n  // return a random number between [min, max)\r\n  return Math.floor(Math.random() * (max - min) + min);\r\n}\r\n\r\nfunction sort(data){\r\n  // ensures data is chronologically ordered\r\n  data.events_hourly.sort((a, b) => new Date(a.date) - new Date(b.date));\r\n  data.events_daily.sort((a, b) => new Date(a.date) - new Date(b.date));\r\n  data.stats_hourly.sort((a, b) => new Date(a.date) - new Date(b.date));\r\n  data.stats_daily.sort((a, b) => new Date(a.date) - new Date(b.date));\r\n}\r\n\r\nexport { generateEvents, generateStats, generatePoints, mergeDateHour, sort };","import React, { useState } from 'react';\r\nimport Table from '../components/Table';\r\nimport { generateEvents, generateStats } from '../lib/utils';\r\nimport styles from '../styles/pages/DataTable.module.scss';\r\n\r\nconst DataTable = ({ data }) => {\r\n\r\n  const [selected, setSelected] = useState(0);\r\n  const labels = [\"Events\", \"Stats\", \"Points of Interest\"];\r\n\r\n  return(\r\n    <div className={styles.body}>\r\n\r\n      <div className={styles.navbar}>\r\n        {labels.map((label, index) => (\r\n          <div \r\n            key={index}\r\n            onClick={() => setSelected(index)}\r\n            className={selected == index ? styles.selected : \"\"}\r\n          >\r\n            {label}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className={styles.search}>\r\n      </div>\r\n\r\n      <div className={styles.table}>\r\n        {CONFIG.map((v, i) => (\r\n          <Table \r\n            key={i}\r\n            config={v.columns} \r\n            data={data[v.field]}\r\n            visible={selected == i}\r\n          />\r\n        ))}\r\n\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n//configuration metadata for charts\r\nconst CONFIG = [\r\n  {\r\n    columns: [{\r\n      id: \"0\",\r\n      Header: \"\",\r\n      columns: [\r\n        { Header: \"Year\", accessor: \"year\" },\r\n        { Header: \"Month\", accessor: \"month\" },\r\n        { Header: \"Date\", accessor: \"day\" },\r\n        { Header: \"Day\", accessor: \"weekday\" },\r\n        { Header: \"Time\", accessor: \"hour\" },\r\n        { Header: \"Location\", accessor: \"name\" }\r\n      ]\r\n    }],\r\n    field: \"all_events\"\r\n  },\r\n\r\n  {\r\n    columns: [{\r\n      id: \"1\",\r\n      Header: \"\",\r\n      columns: [\r\n        { Header: \"Year\", accessor: \"year\" },\r\n        { Header: \"Month\", accessor: \"month\" },\r\n        { Header: \"Date\", accessor: \"day\" },\r\n        { Header: \"Day\", accessor: \"weekday\" },\r\n        { Header: \"Time\", accessor: \"hour\" },\r\n        { Header: \"Impressions\", accessor: \"impressions\" },\r\n        { Header: \"Clicks\", accessor: \"clicks\" },\r\n        { Header: \"Revenue ($)\", accessor: \"revenue\" }\r\n      ]\r\n    }],\r\n    field: \"stats_hourly\"\r\n  },\r\n\r\n  {\r\n    columns: [{\r\n      id: \"2\",\r\n      Header: \"\",\r\n      columns: [\r\n        { Header: \"ID\", accessor: \"poi_id\" },\r\n        { Header: \"Name\", accessor: \"name\" }\r\n      ]\r\n    }],\r\n    field: \"poi\"\r\n  },\r\n]\r\n\r\nexport default DataTable;\r\n\r\n","import React, { useState } from 'react';\r\nimport DatePicker from 'react-date-picker';\r\nimport moment from 'moment';\r\nimport styles from '../styles/components/MapOverlay.module.scss';\r\n\r\nconst MapOverlay = ({ selected, results, from, to, setDates }) => {\r\n\r\n  let numEvents = selected.name ? results[selected.name].length + \" events in range\" : \"\";\r\n  let recent = selected.name ? \"Last: \" + moment(results[selected.name][0].date).format(\"MMMM Do, YYYY - h A\") : \"\";\r\n\r\n  return(\r\n    <div className={styles.body}>\r\n\r\n      <div className={styles.filter}>\r\n        <div className={styles.title}>\r\n          Filter Events\r\n        </div>\r\n        <div className={styles.picker}>\r\n          <span>From: </span> \r\n          <DatePicker \r\n            onChange={(d) => setDates(d, true)} \r\n            value={from}\r\n            maxDate={to}\r\n          />\r\n        </div>\r\n        <div className={styles.picker}>\r\n          <span>To: </span> \r\n          <DatePicker \r\n            onChange={(d) => setDates(d, false)} \r\n            value={to}\r\n            minDate={from}\r\n          />\r\n        </div>\r\n\r\n        <div className={styles.name}>\r\n          {selected.name}\r\n        </div>\r\n        <div className={styles.field}>\r\n          {numEvents}\r\n        </div>\r\n        <div className={styles.field}>\r\n          {recent}\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapOverlay;\r\n","// utils for formatting data for mapping\r\n\r\nfunction getEventsInRange(data, from, to){\r\n  let results = {}\r\n  data.all_events.map((v) => {\r\n    let d = new Date(v.date);\r\n    if(from <= d && d <= to){\r\n      if(v.name in results)\r\n        results[v.name].push(v);\r\n      else\r\n        results[v.name] = [v];\r\n    }\r\n  });\r\n  return results;\r\n}\r\n\r\nexport default getEventsInRange;","import React, { useEffect, useRef } from 'react';\r\nimport { useState } from 'react';\r\nimport useSupercluster from 'use-supercluster';\r\nimport MapOverlay from '../components/MapOverlay';\r\nimport getEventsInRange from '../lib/map';\r\nimport styles from '../styles/pages/Map.module.scss';\r\n\r\nimport ReactMapGL, { FlyToInterpolator, Marker } from 'react-map-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport mapboxgl from 'mapbox-gl';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nmapboxgl.workerClass = require('worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker').default;\r\n\r\nconst Map = ({ data }) => {\r\n\r\n  const map = useRef();\r\n  const [viewport, setViewport] = useState({\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    longitude: -79.3971,\r\n    latitude: 43.6597,\r\n    zoom: 8\r\n  });\r\n\r\n  useEffect(() => {\r\n    const updateSize = () => setViewport(viewport);\r\n    window.addEventListener('resize', updateSize);\r\n    return () => window.removeEventListener('resize', updateSize)\r\n  }, []);\r\n\r\n  const [selected, setSelected] = useState({});\r\n  const [from, setFrom] = useState(new Date(\"12/31/2016\"));\r\n  const [to, setTo] = useState(new Date(\"02/01/2017\"));\r\n  const [results, setResults] = useState(getEventsInRange(data, from, to));\r\n  let markers = data.markers;\r\n\r\n  const bounds = map.current\r\n    ? map.current\r\n        .getMap()\r\n        .getBounds()\r\n        .toArray()\r\n        .flat()\r\n    : [];\r\n\r\n  const { clusters, supercluster } = useSupercluster({\r\n    points: markers,\r\n    bounds,\r\n    zoom: viewport.zoom,\r\n    options: { radius: 75, maxZoom: 16 },\r\n  });\r\n\r\n  const setDates = (date, isFrom) => {\r\n    if(isFrom){\r\n      setFrom(date);\r\n      setResults(getEventsInRange(data, date, to));\r\n    }\r\n    else{\r\n      setTo(date);\r\n      setResults(getEventsInRange(data, from, date));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={styles.body}>\r\n\r\n      <MapOverlay \r\n        selected={selected}\r\n        results={results}\r\n        from={from}\r\n        to={to}\r\n        setDates={setDates}\r\n      />\r\n\r\n      <ReactMapGL\r\n        {...viewport}\r\n        minZoom={1}\r\n        maxZoom={16}\r\n        onViewportChange={nextViewport => setViewport(nextViewport)}\r\n        mapboxApiAccessToken={\"pk.eyJ1Ijoid2F5bmV6IiwiYSI6ImNrbDdmN3BtcTJteWsyb3BsNGt0YmpnZmYifQ.A-To5_8sa_6FqSTUW5TG1g\"}\r\n        ref={map}\r\n      >\r\n        {clusters.map((p, index) => {\r\n          \r\n          let [lon, lat] = p.geometry.coordinates;\r\n          let isCluster = p.properties.cluster;\r\n\r\n          if(isCluster){\r\n            return (\r\n              <Marker \r\n                key={index}\r\n                longitude={lon}\r\n                latitude={lat}\r\n              >\r\n                <div \r\n                  className={styles.cluster}\r\n                  onClick={() => {\r\n                    let zoom = supercluster.getClusterExpansionZoom(p.id);\r\n                    setViewport({\r\n                      ...viewport,\r\n                      latitude: lat,\r\n                      longitude: lon,\r\n                      zoom,\r\n                      transitionInterpolator: new FlyToInterpolator({\r\n                        speed: 1,\r\n                        curve: 3,\r\n                      }),\r\n                      transitionDuration: \"auto\"\r\n                    });\r\n                  }}\r\n                >\r\n                  *{p.properties.point_count} Locations\r\n                </div>\r\n              </Marker>\r\n            );\r\n          }\r\n          else{\r\n            return(\r\n              <Marker \r\n                key={index}\r\n                longitude={lon}\r\n                latitude={lat}\r\n              >\r\n                <div \r\n                  className={styles.marker}\r\n                  onClick={() => {\r\n                    setSelected(p);\r\n                  }}\r\n                >\r\n                  {p.name} - {results[p.name].length}\r\n                </div>\r\n              </Marker>\r\n            );\r\n          }\r\n        })}\r\n      </ReactMapGL>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Map;","const API_ADDRESS = \"https://sprinkle-defiant-schooner.glitch.me/api\";\r\n\r\nconst getAllApiData = async() => {\r\n  return {\r\n    \"events_daily\": await getDailyEvents(),\r\n    \"events_hourly\": await getHourlyEvents(),\r\n    \"stats_daily\": await getDailyStats(),\r\n    \"stats_hourly\": await getHourlyStats(),\r\n    \"poi\": await getPOI()\r\n  };\r\n}\r\n\r\nconst getEndpoint = async(endpoint) => {\r\n  let res = await fetch(API_ADDRESS + endpoint)\r\n    .then(res => res.json());\r\n  return res;\r\n}\r\n\r\nconst getDailyEvents = async() => {\r\n  return await getEndpoint(\"/events/daily\");\r\n}\r\n\r\nconst getHourlyEvents = async() => {\r\n  return await getEndpoint(\"/events/hourly\");\r\n}\r\n\r\nconst getDailyStats = async() => {\r\n  return await getEndpoint(\"/stats/daily\");\r\n}\r\n\r\nconst getHourlyStats = async() => {\r\n  return await getEndpoint(\"/stats/hourly\");\r\n}\r\n\r\nconst getPOI = async() => {\r\n  return await getEndpoint(\"/poi\");\r\n}\r\n\r\nexport { \r\n  getAllApiData, \r\n  getDailyEvents,\r\n  getHourlyEvents,\r\n  getDailyStats,\r\n  getHourlyStats,\r\n  getPOI\r\n};","import React, { useState } from 'react';\r\nimport { \r\n  Charts, \r\n  ChartContainer, \r\n  ChartRow, \r\n  YAxis, \r\n  BarChart, \r\n  styler, \r\n  Resizable \r\n} from \"react-timeseries-charts\";\r\nimport { TimeSeries, Index } from \"pondjs\";\r\nimport moment from 'moment';\r\nimport styles from '../styles/components/Chart.module.scss';\r\n\r\nconst Chart = ({ dataZoomedOut, dataZoomedIn, field, title, label, max, maxZoom }) => {\r\n\r\n  const getSeries = (data, timeFormat) => {\r\n    return new TimeSeries({\r\n      name: \"id_\" + field,\r\n      columns: [\"index\", \"value\"],\r\n      points: data.map(v => {\r\n        return [Index.getIndexString(timeFormat, new Date(v.date)), v[field].toString()]\r\n      })\r\n    });\r\n  }\r\n\r\n  const [highlight, setHighlight] = useState();\r\n  const [zoomed, setZoomed] = useState(false);\r\n  const [series, setSeries] = useState(getSeries(dataZoomedOut, \"1d\"));\r\n  const [timeRange, setTimeRange] = useState(series.range());\r\n  const style = styler([{ key: \"value\", color: \"#D6D6D6\", highlight: '#A3A3A3' }]);\r\n\r\n  let infoValues = [];\r\n  if(highlight){\r\n    infoValues = [{label, value: highlight.event.get(highlight.column)}];\r\n    if(label = \"Revenue\")\r\n      infoValues = [{label, value: parseInt(highlight.event.get(highlight.column)).toFixed(2)}];\r\n  }\r\n\r\n  const handleTimeRangeChanged = (t) => {\r\n    if(t.duration() < 1000 * 60 * 60 * 24 * 5 && !zoomed){\r\n      setZoomed(true);\r\n      setSeries(getSeries(dataZoomedIn, \"1h\"));\r\n    }\r\n    else if(t.duration() >= 1000 * 60 * 60 * 24 * 5 && zoomed){\r\n      setZoomed(false);\r\n      setSeries(getSeries(dataZoomedOut, \"1d\"));\r\n    }\r\n    \r\n    setTimeRange(t);\r\n  }\r\n\r\n  return(\r\n    <div className={styles.body}>\r\n      <Resizable>\r\n        <ChartContainer \r\n          utc={true}\r\n          timeAxisTickCount={6}\r\n          timeRange={timeRange}\r\n          title={title}\r\n          enablePanZoom={true}\r\n          onTimeRangeChanged={handleTimeRangeChanged}\r\n          minTime={new Date(\"12/31/2016\")}\r\n          maxTime={new Date(\"02/11/2017\")}\r\n        >\r\n          <ChartRow height=\"300\">\r\n            <YAxis\r\n              id={\"id_\" + field}\r\n              label={\"Number of\" + label}\r\n              min={0}\r\n              max={zoomed ? maxZoom : max}\r\n              width=\"70\"\r\n              type=\"linear\"\r\n            />\r\n            <Charts>\r\n              <BarChart\r\n                axis={\"id_\" + field}\r\n                style={style}\r\n                columns={[\"value\"]}\r\n                series={series}\r\n                highlighted={highlight}\r\n                onHighlightChange={h => setHighlight(h)}\r\n                info={infoValues}\r\n                infoTimeFormat={index =>\r\n                  moment(index.begin()).format(\"MMM Do 'YY\")\r\n                }\r\n              />\r\n            </Charts>\r\n          </ChartRow>\r\n        </ChartContainer>\r\n      </Resizable>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\nimport Chart from '../components/Chart';\r\nimport styles from '../styles/pages/Visualizations.module.scss';\r\n\r\nconst Visualizations = ({ data }) => {\r\n\r\n  return(\r\n    <div className={styles.body}>\r\n\r\n      <div className={styles.hint}>\r\n        Hint: scroll in on charts to view higher resolution data.\r\n        Click and drag to move viewport.\r\n      </div>\r\n\r\n      <div className={styles.charts}>\r\n        <Chart\r\n          dataZoomedIn={data.stats_hourly}\r\n          dataZoomedOut={data.stats_daily}\r\n          title=\"Daily Impressions\"\r\n          field=\"impressions\"\r\n          label=\"Impressions\"\r\n          max={3000000}\r\n          maxZoom={180000}\r\n        />     \r\n\r\n        <Chart\r\n          dataZoomedIn={data.stats_hourly}\r\n          dataZoomedOut={data.stats_daily}\r\n          title=\"Daily Revenue\"\r\n          field=\"revenue\"\r\n          label=\"Revenue\"\r\n          max={14000}\r\n          maxZoom={1000}\r\n        />\r\n\r\n        <Chart\r\n          dataZoomedIn={data.stats_hourly}\r\n          dataZoomedOut={data.stats_daily}\r\n          title=\"Daily Clicks\"\r\n          field=\"clicks\"\r\n          label=\"Clicks\"\r\n          max={4000}\r\n          maxZoom={350}\r\n        />\r\n\r\n        <Chart\r\n          dataZoomedIn={data.events_hourly}\r\n          dataZoomedOut={data.events_daily}\r\n          title=\"Daily Events\"\r\n          field=\"events\"\r\n          label=\"Events\"\r\n          max={80}\r\n          maxZoom={20}\r\n        />\r\n      </div>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nconst CONFIG = {\r\n\r\n}\r\n\r\nexport default Visualizations;","import React, { useEffect, useState } from 'react';\nimport {\n  HashRouter,\n  Switch,\n  Route,\n  Redirect\n} from 'react-router-dom';\nimport './App.scss';\nimport styles from './styles/App.module.scss';\nimport Navbar from './components/Navbar';\nimport DataTable from './pages/DataTable';\nimport Map from './pages/Map';\nimport { getAllApiData } from './lib/api';\nimport BounceLoader from 'react-spinners/BounceLoader';\nimport Visualizations from './pages/Visualizations';\nimport { generateEvents, generatePoints, generateStats, mergeDateHour, sort } from './lib/utils';\n\nconst App = () => {\n\n  //store api data here\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    // fetch data on first load\n    const getData = async() => {\n      let res = await getAllApiData();\n      generateEvents(res);\n      generateStats(res);\n      generatePoints(res);\n      mergeDateHour(res);\n      sort(res);\n      setData(res);\n      console.log(res);\n    }\n    getData();\n  }, []);\n\n  return (\n    <HashRouter>\n      <div className={styles.body}>\n        {data ? \n          <>\n            <Navbar/>\n            <div className={styles.placeholder}/>\n            <Switch>\n              <Route path=\"/visualizations\"><Visualizations data={data}/></Route>\n              <Route path=\"/datatable\"><DataTable data={data}/></Route>\n              <Route path=\"/map\"><Map data={data}/></Route>\n              <Redirect to=\"/visualizations\"/>\n            </Switch>\n          </>\n\n        :\n\n          <BounceLoader \n            size={60}\n            css={{ margin: \"auto\", transform: \"translateY(30vh)\" }}\n            color={\"#959595\"}\n          />\n        }\n      </div>\n    </HashRouter>\n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Navbar_body__7hNhW\",\"title\":\"Navbar_title__20Xld\",\"subtitle\":\"Navbar_subtitle__16Zjr\",\"label\":\"Navbar_label__3Qvkh\",\"sLabel\":\"Navbar_sLabel__3H4Ds\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"MapOverlay_body___L1dF\",\"filter\":\"MapOverlay_filter__LfLaP\",\"title\":\"MapOverlay_title__1JaFQ\",\"picker\":\"MapOverlay_picker__250G_\",\"name\":\"MapOverlay_name__2FDAw\",\"field\":\"MapOverlay_field__1zb_I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"DataTable_body__3Bg7L\",\"navbar\":\"DataTable_navbar__2A7Ai\",\"selected\":\"DataTable_selected__usNDV\",\"table\":\"DataTable_table__3ZT97\"};"],"sourceRoot":""}