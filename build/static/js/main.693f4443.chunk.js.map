{"version":3,"sources":["styles/pages/Map.module.scss","styles/pages/Visualizations.module.scss","styles/App.module.scss","styles/components/Table.module.scss","styles/components/Chart.module.scss","../node_modules/colorbrewer sync","components/Navbar.jsx","components/Table.jsx","pages/DataTable.jsx","components/MapOverlay.jsx","lib/map.js","pages/Map.jsx","lib/api.js","components/Chart.jsx","pages/Visualizations.jsx","lib/utils.js","App.js","reportWebVitals.js","index.js","styles/components/Navbar.module.scss","styles/components/MapOverlay.module.scss","styles/pages/DataTable.module.scss"],"names":["module","exports","webpackEmptyContext","req","e","Error","code","keys","resolve","id","Navbar","history","useHistory","useState","selected","setSelected","className","styles","body","title","subtitle","sLabel","label","onClick","push","globalFilter","rows","filterValue","trim","length","terms","split","reduceRight","results","term","matchSorter","map","v","autoRemove","val","Table","config","data","visible","columns","useMemo","useTable","useGlobalFilter","useSortBy","getTableProps","getTableBodyProps","headerGroups","prepareRow","state","preGlobalFilteredRows","setGlobalFilter","style","display","table","slice","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","GlobalFilter","count","value","setValue","onChange","useAsyncDebounce","undefined","search","target","placeholder","memo","CONFIG","Header","accessor","field","DataTable","navbar","index","i","MapOverlay","from","to","setDates","numEvents","name","recent","moment","date","format","filter","picker","d","maxDate","minDate","getEventsInRange","all_events","Date","mapboxgl","workerClass","require","default","Map","useRef","width","height","longitude","latitude","zoom","viewport","setViewport","useEffect","updateSize","window","addEventListener","removeEventListener","setFrom","setTo","setResults","markers","bounds","current","getMap","getBounds","toArray","flat","useSupercluster","points","options","radius","maxZoom","clusters","supercluster","isFrom","minZoom","onViewportChange","nextViewport","mapboxApiAccessToken","ref","p","geometry","coordinates","lon","lat","properties","cluster","getClusterExpansionZoom","transitionInterpolator","FlyToInterpolator","speed","curve","transitionDuration","point_count","marker","getAllApiData","a","getDailyEvents","getHourlyEvents","getDailyStats","getHourlyStats","getPOI","getEndpoint","endpoint","fetch","then","res","json","Chart","dataZoomedOut","dataZoomedIn","max","getSeries","timeFormat","TimeSeries","Index","getIndexString","toString","highlight","setHighlight","zoomed","setZoomed","series","setSeries","range","timeRange","setTimeRange","styler","key","color","infoValues","event","get","parseInt","toFixed","utc","timeAxisTickCount","enablePanZoom","onTimeRangeChanged","t","duration","minTime","maxTime","min","type","axis","highlighted","onHighlightChange","h","info","infoTimeFormat","begin","Visualizations","hint","charts","stats_hourly","stats_daily","events_hourly","events_daily","generateEvents","poi","num_poi","events","Math","floor","random","formatDates","reverse","generateStats","stats","revenue","generatePoints","poi_id","mergeDateHour","setHours","getHours","hour","toISOString","formatHour","year","toLocaleString","month","day","weekday","suffix","sort","b","App","setData","console","log","getData","path","size","css","margin","transform","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.693f4443.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Map_body__2ifLF\",\"marker\":\"Map_marker__1Krpr\",\"cluster\":\"Map_cluster__2DgZL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Visualizations_body__2wmhJ\",\"hint\":\"Visualizations_hint__3vazc\",\"charts\":\"Visualizations_charts__3mb-6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"App_body__3yTwm\",\"placeholder\":\"App_placeholder__1KUkz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__1Ru1n\",\"search\":\"Table_search__TAHGI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Chart_body__2Ozn0\"};","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 236;","import React, { useState } from 'react';\r\nimport styles from '../styles/components/Navbar.module.scss';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n\r\n  let history = useHistory();\r\n  let [selected, setSelected] = useState(0);\r\n\r\n  return (\r\n    <div className={styles.body}>\r\n      <div className={styles.title}>EQ Works - Work Sample</div>\r\n      <div className={styles.subtitle}>Product Developer 2a - Frontend Track</div>\r\n\r\n      <div \r\n        className={selected == 0 ? styles.sLabel : styles.label} \r\n        onClick={() => {\r\n          setSelected(0);\r\n          history.push(\"/visualizations\");\r\n        }}\r\n      >\r\n        Visualizations\r\n      </div>\r\n\r\n      <div \r\n        className={selected == 1 ? styles.sLabel : styles.label} \r\n        onClick={() => {\r\n          setSelected(1);\r\n          history.push(\"/datatable\");\r\n        }}\r\n      >\r\n        Data Table\r\n      </div>\r\n\r\n      <div \r\n        className={selected == 2 ? styles.sLabel : styles.label} \r\n        onClick={() => {\r\n          setSelected(2);\r\n          history.push(\"/map\");\r\n        }}\r\n      >\r\n        Map\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;","import React, { useState, useMemo, memo } from \"react\";\r\nimport { useTable, useSortBy, useGlobalFilter, useAsyncDebounce } from \"react-table\";\r\nimport { matchSorter } from 'match-sorter';\r\nimport styles from '../styles/components/Table.module.scss';\r\n\r\nconst globalFilter = (rows, id, filterValue) => {\r\n  filterValue = filterValue.trim();\r\n  if (!filterValue || !filterValue.length)\r\n    return rows;\r\n\r\n  const terms = filterValue.split(' ');\r\n  if(!terms)\r\n    return rows;\r\n\r\n  return terms.reduceRight((results, term) => \r\n    matchSorter(results, term, {keys: id.map(v => 'values.' + v)}), \r\n    rows\r\n  );\r\n}\r\n\r\nglobalFilter.autoRemove = val => !val;\r\n\r\nconst Table = ({config, data, visible}) => {\r\n\r\n  const columns = useMemo(() => config, []);\r\n\r\n  const {\r\n    getTableProps, // table props from react-table\r\n    getTableBodyProps, // table body props from react-table\r\n    headerGroups, // headerGroups, if your table has groupings\r\n    rows, // rows for the table based on the data passed\r\n    prepareRow, // Prepare the row (this function needs to be called for each row before getting the row props)\r\n    state,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter\r\n  } = useTable({columns, data, globalFilter}, useGlobalFilter, useSortBy);\r\n\r\n  return (\r\n    <div style={!visible ? {display: \"none\"} : {}}>\r\n\r\n      <GlobalFilter\r\n        preGlobalFilteredRows={preGlobalFilteredRows}\r\n        globalFilter={state.globalFilter}\r\n        setGlobalFilter={setGlobalFilter}\r\n      />\r\n\r\n      <table {...getTableProps()} className={styles.table}>\r\n        <thead>\r\n          {headerGroups.slice(1).map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                  {column.render(\"Header\")}\r\n                    {column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? ' ⮝'\r\n                        : ' ⮟'\r\n                      : ' ⮞'}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map(cell => {\r\n                  return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nconst GlobalFilter = ({ preGlobalFilteredRows, globalFilter, setGlobalFilter }) => {\r\n  const count = preGlobalFilteredRows.length\r\n  const [value, setValue] = useState(globalFilter)\r\n  const onChange = useAsyncDebounce(value => {\r\n    setGlobalFilter(value || undefined)\r\n  }, 200)\r\n\r\n  return (\r\n    <div className={styles.search}>\r\n      <input\r\n        value={value || \"\"}\r\n        onChange={e => {\r\n          setValue(e.target.value);\r\n          onChange(e.target.value);\r\n        }}\r\n        placeholder={`Search ${count} rows (Hint: chain searches by space-seperating i.e. 2017 11AM)`}\r\n        \r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(Table);","import React, { useState } from 'react';\r\nimport Table from '../components/Table';\r\nimport styles from '../styles/pages/DataTable.module.scss';\r\n\r\nconst DataTable = ({ data }) => {\r\n\r\n  const [selected, setSelected] = useState(0);\r\n  const labels = [\"Events\", \"Stats\", \"Points of Interest\"];\r\n\r\n  return(\r\n    <div className={styles.body}>\r\n\r\n      <div className={styles.navbar}>\r\n        {labels.map((label, index) => (\r\n          <div \r\n            key={index}\r\n            onClick={() => setSelected(index)}\r\n            className={selected == index ? styles.selected : \"\"}\r\n          >\r\n            {label}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className={styles.search}>\r\n      </div>\r\n\r\n      <div className={styles.table}>\r\n        {CONFIG.map((v, i) => (\r\n          <Table \r\n            key={i}\r\n            config={v.columns} \r\n            data={data[v.field]}\r\n            visible={selected == i}\r\n          />\r\n        ))}\r\n\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n//configuration metadata for charts\r\nconst CONFIG = [\r\n  {\r\n    columns: [{\r\n      id: \"0\",\r\n      Header: \"\",\r\n      columns: [\r\n        { Header: \"Year\", accessor: \"year\" },\r\n        { Header: \"Month\", accessor: \"month\" },\r\n        { Header: \"Date\", accessor: \"day\" },\r\n        { Header: \"Day\", accessor: \"weekday\" },\r\n        { Header: \"Time\", accessor: \"hour\" },\r\n        { Header: \"Location\", accessor: \"name\" }\r\n      ]\r\n    }],\r\n    field: \"all_events\"\r\n  },\r\n\r\n  {\r\n    columns: [{\r\n      id: \"1\",\r\n      Header: \"\",\r\n      columns: [\r\n        { Header: \"Year\", accessor: \"year\" },\r\n        { Header: \"Month\", accessor: \"month\" },\r\n        { Header: \"Date\", accessor: \"day\" },\r\n        { Header: \"Day\", accessor: \"weekday\" },\r\n        { Header: \"Time\", accessor: \"hour\" },\r\n        { Header: \"Impressions\", accessor: \"impressions\" },\r\n        { Header: \"Clicks\", accessor: \"clicks\" },\r\n        { Header: \"Revenue ($)\", accessor: \"revenue\" }\r\n      ]\r\n    }],\r\n    field: \"stats_hourly\"\r\n  },\r\n\r\n  {\r\n    columns: [{\r\n      id: \"2\",\r\n      Header: \"\",\r\n      columns: [\r\n        { Header: \"ID\", accessor: \"poi_id\" },\r\n        { Header: \"Name\", accessor: \"name\" }\r\n      ]\r\n    }],\r\n    field: \"poi\"\r\n  },\r\n]\r\n\r\nexport default DataTable;\r\n\r\n","import React, { useState } from 'react';\r\nimport DatePicker from 'react-date-picker';\r\nimport moment from 'moment';\r\nimport styles from '../styles/components/MapOverlay.module.scss';\r\n\r\nconst MapOverlay = ({ selected, results, from, to, setDates }) => {\r\n\r\n  let numEvents = selected.name ? results[selected.name].length + \" events in range\" : \"\";\r\n  let recent = selected.name ? \"Last: \" + moment(results[selected.name][0].date).format(\"MMMM Do, YYYY - h A\") : \"\";\r\n\r\n  return(\r\n    <div className={styles.body}>\r\n\r\n      <div className={styles.filter}>\r\n        <div className={styles.title}>\r\n          Filter Events\r\n        </div>\r\n        <div className={styles.picker}>\r\n          <span>From: </span> \r\n          <DatePicker \r\n            onChange={(d) => setDates(d, true)} \r\n            value={from}\r\n            maxDate={to}\r\n          />\r\n        </div>\r\n        <div className={styles.picker}>\r\n          <span>To: </span> \r\n          <DatePicker \r\n            onChange={(d) => setDates(d, false)} \r\n            value={to}\r\n            minDate={from}\r\n          />\r\n        </div>\r\n\r\n        <div className={styles.name}>\r\n          {selected.name}\r\n        </div>\r\n        <div className={styles.field}>\r\n          {numEvents}\r\n        </div>\r\n        <div className={styles.field}>\r\n          {recent}\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapOverlay;\r\n","// utils for formatting data for mapping\r\n\r\nfunction getEventsInRange(data, from, to){\r\n  let results = {}\r\n  data.all_events.map((v) => {\r\n    let d = new Date(v.date);\r\n    if(from <= d && d <= to){\r\n      if(v.name in results)\r\n        results[v.name].push(v);\r\n      else\r\n        results[v.name] = [v];\r\n    }\r\n  });\r\n  return results;\r\n}\r\n\r\nexport default getEventsInRange;","import React, { useEffect, useRef } from 'react';\r\nimport { useState } from 'react';\r\nimport useSupercluster from 'use-supercluster';\r\nimport MapOverlay from '../components/MapOverlay';\r\nimport getEventsInRange from '../lib/map';\r\nimport styles from '../styles/pages/Map.module.scss';\r\n\r\nimport ReactMapGL, { FlyToInterpolator, Marker } from 'react-map-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport mapboxgl from 'mapbox-gl';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nmapboxgl.workerClass = require('worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker').default;\r\n\r\nconst Map = ({ data }) => {\r\n\r\n  const map = useRef();\r\n  const [viewport, setViewport] = useState({\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    longitude: -79.3971,\r\n    latitude: 43.6597,\r\n    zoom: 8\r\n  });\r\n\r\n  useEffect(() => {\r\n    const updateSize = () => setViewport(viewport);\r\n    window.addEventListener('resize', updateSize);\r\n    return () => window.removeEventListener('resize', updateSize)\r\n  }, []);\r\n\r\n  const [selected, setSelected] = useState({});\r\n  const [from, setFrom] = useState(new Date(\"12/31/2016\"));\r\n  const [to, setTo] = useState(new Date(\"02/01/2017\"));\r\n  const [results, setResults] = useState(getEventsInRange(data, from, to));\r\n  let markers = data.markers;\r\n\r\n  const bounds = map.current\r\n    ? map.current\r\n        .getMap()\r\n        .getBounds()\r\n        .toArray()\r\n        .flat()\r\n    : [];\r\n\r\n  const { clusters, supercluster } = useSupercluster({\r\n    points: markers,\r\n    bounds,\r\n    zoom: viewport.zoom,\r\n    options: { radius: 75, maxZoom: 16 },\r\n  });\r\n\r\n  const setDates = (date, isFrom) => {\r\n    if(isFrom){\r\n      setFrom(date);\r\n      setResults(getEventsInRange(data, date, to));\r\n    }\r\n    else{\r\n      setTo(date);\r\n      setResults(getEventsInRange(data, from, date));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={styles.body}>\r\n\r\n      <MapOverlay \r\n        selected={selected}\r\n        results={results}\r\n        from={from}\r\n        to={to}\r\n        setDates={setDates}\r\n      />\r\n\r\n      <ReactMapGL\r\n        {...viewport}\r\n        minZoom={1}\r\n        maxZoom={16}\r\n        onViewportChange={nextViewport => setViewport(nextViewport)}\r\n        mapboxApiAccessToken={\"pk.eyJ1Ijoid2F5bmV6IiwiYSI6ImNrbDdmN3BtcTJteWsyb3BsNGt0YmpnZmYifQ.A-To5_8sa_6FqSTUW5TG1g\"}\r\n        ref={map}\r\n      >\r\n        {clusters.map((p, index) => {\r\n          \r\n          let [lon, lat] = p.geometry.coordinates;\r\n          let isCluster = p.properties.cluster;\r\n\r\n          if(isCluster){\r\n            return (\r\n              <Marker \r\n                key={index}\r\n                longitude={lon}\r\n                latitude={lat}\r\n              >\r\n                <div \r\n                  className={styles.cluster}\r\n                  onClick={() => {\r\n                    let zoom = supercluster.getClusterExpansionZoom(p.id);\r\n                    setViewport({\r\n                      ...viewport,\r\n                      latitude: lat,\r\n                      longitude: lon,\r\n                      zoom,\r\n                      transitionInterpolator: new FlyToInterpolator({\r\n                        speed: 1,\r\n                        curve: 3,\r\n                      }),\r\n                      transitionDuration: \"auto\"\r\n                    });\r\n                  }}\r\n                >\r\n                  *{p.properties.point_count} Locations\r\n                </div>\r\n              </Marker>\r\n            );\r\n          }\r\n          else{\r\n            return(\r\n              <Marker \r\n                key={index}\r\n                longitude={lon}\r\n                latitude={lat}\r\n              >\r\n                <div \r\n                  className={styles.marker}\r\n                  onClick={() => {\r\n                    setSelected(p);\r\n                  }}\r\n                >\r\n                  {p.name} - {results[p.name].length}\r\n                </div>\r\n              </Marker>\r\n            );\r\n          }\r\n        })}\r\n      </ReactMapGL>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Map;","const API_ADDRESS = \"https://oval-peppermint-mink.glitch.me/api\";\r\n\r\nconst getAllApiData = async() => {\r\n  return {\r\n    \"events_daily\": await getDailyEvents(),\r\n    \"events_hourly\": await getHourlyEvents(),\r\n    \"stats_daily\": await getDailyStats(),\r\n    \"stats_hourly\": await getHourlyStats(),\r\n    \"poi\": await getPOI()\r\n  };\r\n}\r\n\r\nconst getEndpoint = async(endpoint) => {\r\n  let res = await fetch(API_ADDRESS + endpoint)\r\n    .then(res => res.json());\r\n  return res;\r\n}\r\n\r\nconst getDailyEvents = async() => {\r\n  return await getEndpoint(\"/events/daily\");\r\n}\r\n\r\nconst getHourlyEvents = async() => {\r\n  return await getEndpoint(\"/events/hourly\");\r\n}\r\n\r\nconst getDailyStats = async() => {\r\n  return await getEndpoint(\"/stats/daily\");\r\n}\r\n\r\nconst getHourlyStats = async() => {\r\n  return await getEndpoint(\"/stats/hourly\");\r\n}\r\n\r\nconst getPOI = async() => {\r\n  return await getEndpoint(\"/poi\");\r\n}\r\n\r\nexport { \r\n  getAllApiData, \r\n  getDailyEvents,\r\n  getHourlyEvents,\r\n  getDailyStats,\r\n  getHourlyStats,\r\n  getPOI\r\n};","import React, { useState } from 'react';\r\nimport { \r\n  Charts, \r\n  ChartContainer, \r\n  ChartRow, \r\n  YAxis, \r\n  BarChart, \r\n  styler, \r\n  Resizable \r\n} from \"react-timeseries-charts\";\r\nimport { TimeSeries, Index } from \"pondjs\";\r\nimport moment from 'moment';\r\nimport styles from '../styles/components/Chart.module.scss';\r\n\r\nconst Chart = ({ dataZoomedOut, dataZoomedIn, field, title, label, max, maxZoom }) => {\r\n\r\n  const getSeries = (data, timeFormat) => {\r\n    return new TimeSeries({\r\n      name: \"id_\" + field,\r\n      columns: [\"index\", \"value\"],\r\n      points: data.map(v => {\r\n        return [Index.getIndexString(timeFormat, new Date(v.date)), v[field].toString()]\r\n      })\r\n    });\r\n  }\r\n\r\n  const [highlight, setHighlight] = useState();\r\n  const [zoomed, setZoomed] = useState(false);\r\n  const [series, setSeries] = useState(getSeries(dataZoomedOut, \"1d\"));\r\n  const [timeRange, setTimeRange] = useState(series.range());\r\n  const style = styler([{ key: \"value\", color: \"#D6D6D6\", highlight: '#A3A3A3' }]);\r\n\r\n  let infoValues = [];\r\n  if(highlight){\r\n    infoValues = [{label, value: highlight.event.get(highlight.column)}];\r\n    if(label = \"Revenue\")\r\n      infoValues = [{label, value: parseInt(highlight.event.get(highlight.column)).toFixed(2)}];\r\n  }\r\n\r\n  const handleTimeRangeChanged = (t) => {\r\n    if(t.duration() < 1000 * 60 * 60 * 24 * 5 && !zoomed){\r\n      setZoomed(true);\r\n      setSeries(getSeries(dataZoomedIn, \"1h\"));\r\n    }\r\n    else if(t.duration() >= 1000 * 60 * 60 * 24 * 5 && zoomed){\r\n      setZoomed(false);\r\n      setSeries(getSeries(dataZoomedOut, \"1d\"));\r\n    }\r\n    \r\n    setTimeRange(t);\r\n  }\r\n\r\n  return(\r\n    <div className={styles.body}>\r\n      <Resizable>\r\n        <ChartContainer \r\n          utc={true}\r\n          timeAxisTickCount={6}\r\n          timeRange={timeRange}\r\n          title={title}\r\n          enablePanZoom={true}\r\n          onTimeRangeChanged={handleTimeRangeChanged}\r\n          minTime={new Date(\"12/31/2016\")}\r\n          maxTime={new Date(\"02/11/2017\")}\r\n        >\r\n          <ChartRow height=\"300\">\r\n            <YAxis\r\n              id={\"id_\" + field}\r\n              label={\"Number of\" + label}\r\n              min={0}\r\n              max={zoomed ? maxZoom : max}\r\n              width=\"70\"\r\n              type=\"linear\"\r\n            />\r\n            <Charts>\r\n              <BarChart\r\n                axis={\"id_\" + field}\r\n                style={style}\r\n                columns={[\"value\"]}\r\n                series={series}\r\n                highlighted={highlight}\r\n                onHighlightChange={h => setHighlight(h)}\r\n                info={infoValues}\r\n                infoTimeFormat={index =>\r\n                  moment(index.begin()).format(\"MMM Do 'YY\")\r\n                }\r\n              />\r\n            </Charts>\r\n          </ChartRow>\r\n        </ChartContainer>\r\n      </Resizable>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\nimport Chart from '../components/Chart';\r\nimport styles from '../styles/pages/Visualizations.module.scss';\r\n\r\nconst Visualizations = ({ data }) => {\r\n\r\n  return(\r\n    <div className={styles.body}>\r\n\r\n      <div className={styles.hint}>\r\n        Hint: scroll in on charts to view higher resolution data.\r\n        Click and drag to move viewport.\r\n      </div>\r\n\r\n      <div className={styles.charts}>\r\n        <Chart\r\n          dataZoomedIn={data.stats_hourly}\r\n          dataZoomedOut={data.stats_daily}\r\n          title=\"Daily Impressions\"\r\n          field=\"impressions\"\r\n          label=\"Impressions\"\r\n          max={3000000}\r\n          maxZoom={180000}\r\n        />     \r\n\r\n        <Chart\r\n          dataZoomedIn={data.stats_hourly}\r\n          dataZoomedOut={data.stats_daily}\r\n          title=\"Daily Revenue\"\r\n          field=\"revenue\"\r\n          label=\"Revenue\"\r\n          max={14000}\r\n          maxZoom={1000}\r\n        />\r\n\r\n        <Chart\r\n          dataZoomedIn={data.stats_hourly}\r\n          dataZoomedOut={data.stats_daily}\r\n          title=\"Daily Clicks\"\r\n          field=\"clicks\"\r\n          label=\"Clicks\"\r\n          max={4000}\r\n          maxZoom={350}\r\n        />\r\n\r\n        <Chart\r\n          dataZoomedIn={data.events_hourly}\r\n          dataZoomedOut={data.events_daily}\r\n          title=\"Daily Events\"\r\n          field=\"events\"\r\n          label=\"Events\"\r\n          max={80}\r\n          maxZoom={20}\r\n        />\r\n      </div>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nconst CONFIG = {\r\n\r\n}\r\n\r\nexport default Visualizations;","// utils to shape API data\r\n\r\nfunction generateEvents(data){\r\n  // generates mock individual event data\r\n  if(!data)\r\n    return [];\r\n\r\n  let poi = data.poi;\r\n  let num_poi = data.poi.length;\r\n\r\n  let events_hourly = data.events_hourly;\r\n  let events = events_hourly.map((v) => {\r\n    let i = rand(0, num_poi);\r\n    return { \r\n      ...v, \r\n      ...poi[i],\r\n      ...formatDates(v.date)\r\n    };\r\n  });\r\n  data.all_events = events.reverse();\r\n}\r\n\r\nfunction generateStats(data){\r\n  // formats stats data\r\n  if(!data)\r\n    return [];\r\n\r\n  let stats_hourly = data.stats_hourly;\r\n  let stats = stats_hourly.map((v) => {\r\n    return { \r\n      ...v, \r\n      ...formatDates(v.date),\r\n      revenue: parseInt(v.revenue).toFixed(2)\r\n    };\r\n  });\r\n  data.stats_hourly = stats.reverse();\r\n}\r\n\r\nfunction generatePoints(data){\r\n  // generates point GeoJSON-compliant point data\r\n  let markers = data.poi.map((p) => ({\r\n    type: \"Feature\",\r\n    id: p.poi_id,\r\n    name: p.name,\r\n    properties: {\r\n      cluster: false,\r\n    },\r\n    geometry: { type: \"Point\", coordinates: [p.lon, p.lat] }\r\n  }));\r\n  data.markers = markers;\r\n}\r\n\r\nfunction mergeDateHour(data){\r\n  // sets date attribute to correct hour\r\n  data.events_hourly.map((v) => {\r\n    let d = new Date(v.date);\r\n    d.setHours(d.getHours() + v.hour)\r\n    v.date = d.toISOString();\r\n    v.hour = formatHour(v.hour);\r\n  });\r\n\r\n  data.stats_hourly.map((v) => {\r\n    let d = new Date(v.date);\r\n    d.setHours(d.getHours() + v.hour)\r\n    v.date = d.toISOString();\r\n    v.hour = formatHour(v.hour);\r\n  });\r\n\r\n  data.all_events.map((v) => {\r\n    let d = new Date(v.date);\r\n    d.setHours(d.getHours() + v.hour)\r\n    v.date = d.toISOString();\r\n    v.hour = formatHour(v.hour);\r\n  });\r\n}\r\n\r\nfunction formatDates(date){\r\n  let d = new Date(date);\r\n  return {\r\n    year: d.toLocaleString(\"en-US\", { year: 'numeric' }),\r\n    month: d.toLocaleString(\"en-US\", { month: 'long' }),\r\n    day: d.toLocaleString(\"en-US\", { day: 'numeric' }),\r\n    weekday: d.toLocaleString(\"en-US\", { weekday: 'long' })\r\n  }\r\n}\r\n\r\nfunction formatHour(hour){\r\n  let suffix = hour < 12 ? \"PM\" : \"AM\";\r\n  let time = (hour % 12) || 12;\r\n  return `${time}${suffix}`;\r\n}\r\n\r\nfunction rand(min, max){\r\n  // return a random number between [min, max)\r\n  return Math.floor(Math.random() * (max - min) + min);\r\n}\r\n\r\nfunction sort(data){\r\n  // ensures data is chronologically ordered\r\n  data.events_hourly.sort((a, b) => new Date(a.date) - new Date(b.date));\r\n  data.events_daily.sort((a, b) => new Date(a.date) - new Date(b.date));\r\n  data.stats_hourly.sort((a, b) => new Date(a.date) - new Date(b.date));\r\n  data.stats_daily.sort((a, b) => new Date(a.date) - new Date(b.date));\r\n}\r\n\r\nexport { generateEvents, generateStats, generatePoints, mergeDateHour, sort };","import React, { useEffect, useState } from 'react';\nimport {\n  HashRouter,\n  Switch,\n  Route,\n  Redirect\n} from 'react-router-dom';\nimport './App.scss';\nimport styles from './styles/App.module.scss';\nimport Navbar from './components/Navbar';\nimport DataTable from './pages/DataTable';\nimport Map from './pages/Map';\nimport { getAllApiData } from './lib/api';\nimport BounceLoader from 'react-spinners/BounceLoader';\nimport Visualizations from './pages/Visualizations';\nimport { generateEvents, generatePoints, generateStats, mergeDateHour, sort } from './lib/utils';\n\nconst App = () => {\n\n  //store api data here\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    // fetch data on first load\n    const getData = async() => {\n      let res = await getAllApiData();\n      generateEvents(res);\n      generateStats(res);\n      generatePoints(res);\n      mergeDateHour(res);\n      sort(res);\n      setData(res);\n      console.log(res);\n    }\n    getData();\n  }, []);\n\n  return (\n    <HashRouter>\n      <div className={styles.body}>\n        {data ? \n          <>\n            <Navbar/>\n            <div className={styles.placeholder}/>\n            <Switch>\n              <Route path=\"/visualizations\"><Visualizations data={data}/></Route>\n              <Route path=\"/datatable\"><DataTable data={data}/></Route>\n              <Route path=\"/map\"><Map data={data}/></Route>\n              <Redirect to=\"/visualizations\"/>\n            </Switch>\n          </>\n\n        :\n\n          <BounceLoader \n            size={60}\n            css={{ margin: \"auto\", transform: \"translateY(30vh)\" }}\n            color={\"#959595\"}\n          />\n        }\n      </div>\n    </HashRouter>\n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Navbar_body__7hNhW\",\"title\":\"Navbar_title__20Xld\",\"subtitle\":\"Navbar_subtitle__16Zjr\",\"label\":\"Navbar_label__3Qvkh\",\"sLabel\":\"Navbar_sLabel__3H4Ds\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"MapOverlay_body___L1dF\",\"filter\":\"MapOverlay_filter__LfLaP\",\"title\":\"MapOverlay_title__1JaFQ\",\"picker\":\"MapOverlay_picker__250G_\",\"name\":\"MapOverlay_name__2FDAw\",\"field\":\"MapOverlay_field__1zb_I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"DataTable_body__3Bg7L\",\"navbar\":\"DataTable_navbar__2A7Ai\",\"selected\":\"DataTable_selected__usNDV\",\"table\":\"DataTable_table__3ZT97\"};"],"sourceRoot":""}